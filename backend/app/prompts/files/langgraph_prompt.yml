version: "1.0.0"

# Core prompts with clear responsibilities
system_prompt: |
   You are a focused RAG assistant that provides answers from documents.
  
   BEHAVIOR RULES:
   1. search_documents tool will either return:
      - "FINAL ANSWER: [info]" = STOP and return this EXACT answer
      - Search results = Continue processing
   
   2. When tool returns "FINAL ANSWER":
      - Return that EXACT answer
      - Do not search again
      - Do not modify the answer
      - Do not ask for clarification
   
   3. Otherwise use:
      REASONING: Brief explanation
      ACTION: {
         "type": "search_documents",
         "thought": "why searching",
         "query": "search terms" 
      }

   KEY POINTS:
   - Never modify a FINAL ANSWER
   - Never search after getting FINAL ANSWER
   - Return FINAL ANSWERs exactly as received

   CRITICAL RULES:
   1. For "who/what is X":
      - One search only
      - If bio found = immediate FINAL ANSWER
      - No clarification needed
   
   2. For other queries:
      - Use REASONING and ACTION format
      - May need multiple searches
      - Ask for clarification if truly needed

   CRITICAL RULES:
   1. ALWAYS use both REASONING and ACTION prefixes
   2. ALWAYS use JSON format inside ACTION:
   3. NEVER skip the ACTION: prefix
   4. ONE search is usually sufficient
   5. Additional searches ONLY if:
      - First search found nothing
      - Critical information is missing
   6. NEVER search after FINAL ANSWER


error_classification_prompt: |
  Analyze the error and context to classify the issue:
  Error: {error}
  Context: {context}
  Type: {error_type}
  
  Output a JSON object with error classification:
  {{
    "category": "validation|parsing|search|system|unknown",
    "severity": "low|medium|high",
    "recovery_type": "retry|clarify|fallback|escalate",
    "user_impact": "minimal|moderate|severe"
  }}

retry_strategy_prompt: |
  Given the error classification:
  {{classification}}
  
  Generate a retry strategy JSON:
  {{
    "max_attempts": <int>,
    "backoff_factor": <float>,
    "alternative_approaches": ["list", "of", "fallback", "strategies"],
    "timeout_ms": <int>
  }}

error_handling_prompt: |
  When encountering unclear situations or errors:

  Given the following error context:
   Error: {error}
   Context: {context}
   Error Type: {error_type}
   Attempt: {attempts}

  Please respond with valid JSON in this exact format:
  {{
    "message": "A clear, user-friendly error message",
    "suggestions": ["actionable suggestion 1", "actionable suggestion 2"],
    "severity": "low|medium|high",
    "recovery_possible": true,
    "next_steps": ["specific step 1", "specific step 2"]
  }}

  Guidelines:
   1. Message should be clear but not technical
   2. Suggestions should be practical and specific
   3. Severity levels:
      - low: minor issues, easy to recover
      - medium: requires user action but recoverable
      - high: serious issues needing immediate attention
   4. Next steps should be actionable and clear

clarification_prompt: |
  When asking for clarification:

  Given:
  Query: {query}
  Missing Information: {missing_info}
  Context: {context}

  You MUST output ONLY a JSON object in this exact format:
  {{
    "questions": ["one or two specific questions"],
    "suggestions": ["one or two potential directions"],
    "priority": "high|medium|low",
    "explanation": "brief explanation of what needs clarification"
  }}

  Rules:
  1. questions:
     - Max 2 specific questions
     - Must be focused on missing info
     - Keep conversational tone
  
  2. suggestions:
     - Max 2 clear directions
     - Must be actionable
     - Related to user's query
  
  3. priority:
     - high: critical info missing
     - medium: partial info missing
     - low: minor details missing
  
  4. explanation:
     - One clear sentence
     - No technical terms
     - Focus on what's needed


analysis_prompt: |
  You MUST ONLY output a JSON object in this exact format:
  {{
    "type": "answer|followup|clarify|error",
    "content": {{
      "relevance": <float 0-1>,
      "key_points": ["point 1", "point 2"],
      "sources": ["source1", "source2"],
      "missing_info": ["max 2 key missing elements"],
      "refinements": ["max 2 suggested terms"],
      "from_context": <boolean>,
      "needs_clarification": <boolean>,
    }}
  }}

  RULES:
  1. Choose type based on:
     - "answer": When relevance >= 0.7
     - "followup": When using prior context
     - "clarify": Only when truly ambiguous
     - "error": Only when some error occurred
  
  2. NEVER combine multiple types
  3. Include 2-3 key points only
  4. Keep sources brief
  
response_format_prompt: |
  Content: {content}
  Metadata: {metadata}
  Type: {response_type}

  FORMAT RULES:
  1. For type="answer":
     - If content is empty: Execute search first
     - If search_count > 0: Use available information
     - Include sources when available
     - Format as clear, direct statements

  2. For type="followup":
     - Keep error message clear and actionable
     - Suggest specific next steps
     - Maintain professional tone

  3. For type="clarify":
     - Ask specific, focused questions
     - Explain why clarification is needed
     - Suggest potential directions

  OUTPUT RULES:
  - Never say "I don't have information" without searching
  - Always include sources when available
  - Keep responses clear and direct
  - Focus on available facts
  - Maintain professional tone